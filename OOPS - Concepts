//Program to demonstrate class and object 
package oops_encapsulation;
public class EncapsulationDemo {
	public static void main(String[] args) {
		//object creation 
		OopsConceptDemo obj = new OopsConceptDemo();
		obj.setSerialNum(101);
		obj.setName("yuvi");
		obj.setAge(20);
		System.out.println(obj);
	}
}
//Program to demonstrate class and object 
package oops_encapsulation;

public class EncapsulationDemo {
	public static void main(String[] args) {
		
		//object creation 
		OopsConceptDemo obj = new OopsConceptDemo();
		obj.setSerialNum(101);
		obj.setName("Pooja");
		obj.setAge(20);
		System.out.println(obj);
		
	}

}
//Program to demonstrate method overloading
package oops_polymorphsim.overloading.v1;

public class Executor {

	public static void main(String[] args) {

		System.out.println("Is 121 Palindrome? "+Operations.isPalindrome(121));
		System.out.println("Is 123 Palindrome? "+Operations.isPalindrome(123));
		
		System.out.println("Is CAR Palindrome? "+Operations.isPalindrome("CAR"));
		System.out.println("Is RACECAR Palindrome? "+Operations.isPalindrome("RACECAR"));

	}

}
//Program to define Subclass Circle
package oops_polymorphsim.overriding.v1;


class Circle extends Shape {
	private double radius;

	// Constructor for Circle
	public Circle(double radius) {
		this.radius = radius;
	}

	// Override draw method for Circle
	@Override
	public void draw() {
		System.out.println("Drawing a circle with radius " + radius);
	}

	// Override erase method for Circle
	@Override
	public void erase() {
		System.out.println("Erasing a circle with radius " + radius);
	}
}
